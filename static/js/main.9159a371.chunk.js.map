{"version":3,"sources":["components/Table.js","components/Form.js","App.js","index.js"],"names":["TableHeader","TableBody","props","rows","characterData","map","row","index","name","job","onClick","removerCharacter","Table","Form","initialState","state","handleChange","event","target","value","setState","submitForm","handleSubmit","this","htmlFor","type","id","onChange","Component","App","characters","filter","character","i","className","ReactDOM","render","document","getElementById"],"mappings":"2OAEMA,EAAc,WAClB,OACE,gCACA,+BACE,sCACA,qCACA,8CAMAC,EAAY,SAACC,GACjB,IAAMC,EAAOD,EAAME,cAAcC,KAAI,SAACC,EAAKC,GACzC,OACE,+BACE,6BAAKD,EAAIE,OACT,6BAAKF,EAAIG,MACT,6BACE,wBAAQC,QAAS,kBAAMR,EAAMS,iBAAiBJ,IAA9C,yBAJKA,MASb,OACE,gCACGJ,KAeQS,EAVD,SAACV,GAAW,IAChBE,EAAoCF,EAApCE,cAAeO,EAAqBT,EAArBS,iBACvB,OACE,kCACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAWP,cAAeA,EAAeO,iBAAkBA,Q,OCClDE,E,4MApCbC,aAAe,CACbN,KAAM,GACNC,IAAK,I,EAGPM,MAAQ,EAAKD,a,EAEbE,aAAe,SAACC,GAAW,IAAD,EACAA,EAAMC,OAAtBV,EADgB,EAChBA,KAAMW,EADU,EACVA,MAEd,EAAKC,SAAL,eACGZ,EAAOW,K,EAIZE,WAAa,WACX,EAAKD,SAAS,EAAKN,cACnB,EAAKZ,MAAMoB,aAAa,EAAKP,Q,4CAE/B,WAAU,IAAD,EACeQ,KAAKR,MAAnBP,EADD,EACCA,KAAMC,EADP,EACOA,IAEd,OACE,iCACE,uBAAOe,QAAQ,OAAf,kBACA,uBAAOC,KAAK,OAAOjB,KAAK,OAAOkB,GAAG,OAAOP,MAAOX,EAAMmB,SAAUJ,KAAKP,eAErE,uBAAOQ,QAAQ,OAAf,iBACA,uBAAOC,KAAK,OAAOjB,KAAK,MAAMkB,GAAG,MAAMP,MAAOV,EAAKkB,SAAUJ,KAAKP,eAElE,uBAAOS,KAAK,SAASN,MAAM,SAAST,QAASa,KAAKF,oB,GA/BvCO,aCsCJC,E,4MAhCbd,MAAQ,CACNe,WAAY,I,EAGdnB,iBAAmB,SAACJ,GAAW,IACrBuB,EAAe,EAAKf,MAApBe,WAER,EAAKV,SAAS,CACZU,WAAYA,EAAWC,QAAO,SAACC,EAAWC,GACxC,OAAOA,IAAM1B,Q,EAKnBe,aAAe,SAACU,GACd,EAAKZ,SAAS,CACZU,WAAW,GAAD,mBAAM,EAAKf,MAAMe,YAAjB,CAA6BE,O,4CAI3C,WAAU,IACAF,EAAeP,KAAKR,MAApBe,WAER,OACE,sBAAKI,UAAU,YAAf,UACE,cAAC,EAAD,CAAMZ,aAAcC,KAAKD,eACzB,cAAC,EAAD,CAAOlB,cAAe0B,EAAYnB,iBAAkBY,KAAKZ,0B,GA3B/CiB,aCFlBO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.9159a371.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst TableHeader = () => {\r\n  return(\r\n    <thead>\r\n    <tr>\r\n      <th>Name</th>\r\n      <th>Job</th>\r\n      <th>remove</th>\r\n    </tr>\r\n    </thead>\r\n  );\r\n}\r\n\r\nconst TableBody = (props) => {\r\n  const rows = props.characterData.map((row, index) => {\r\n    return (\r\n      <tr key={index}>\r\n        <td>{row.name}</td>\r\n        <td>{row.job}</td>\r\n        <td>\r\n          <button onClick={() => props.removerCharacter(index)}>Deletar</button>\r\n        </td>\r\n      </tr>\r\n    );\r\n  })\r\n  return (\r\n    <tbody>\r\n      {rows}  \r\n    </tbody>\r\n  )\r\n}\r\n\r\nconst Table = (props) => {\r\n  const { characterData, removerCharacter } = props;\r\n  return(\r\n    <table>\r\n      <TableHeader />\r\n      <TableBody characterData={characterData} removerCharacter={removerCharacter}/>\r\n    </table>\r\n  );\r\n}\r\n\r\nexport default Table;","import React, { Component } from 'react';\r\n\r\nclass Form extends Component {\r\n  initialState = {\r\n    name: '',\r\n    job: '',\r\n  }\r\n\r\n  state = this.initialState;\r\n\r\n  handleChange = (event) => {\r\n    const { name, value } = event.target\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    })\r\n  }\r\n\r\n  submitForm = () => {\r\n    this.setState(this.initialState);\r\n    this.props.handleSubmit(this.state);\r\n  }\r\n  render() {\r\n    const { name, job } = this.state;\r\n\r\n    return(\r\n      <form>\r\n        <label htmlFor=\"name\">Name</label>\r\n        <input type=\"text\" name=\"name\" id=\"name\" value={name} onChange={this.handleChange}/>\r\n\r\n        <label htmlFor=\"name\">Job</label>\r\n        <input type=\"text\" name=\"job\" id=\"job\" value={job} onChange={this.handleChange}/>\r\n\r\n        <input type=\"button\" value=\"Submit\" onClick={this.submitForm}/>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;","import React, { Component } from 'react';\r\n\r\nimport './styles/index.css'\r\n\r\nimport Table from './components/Table';\r\nimport Form from './components/Form';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    characters: []\r\n  }\r\n\r\n  removerCharacter = (index) => {\r\n    const { characters } = this.state\r\n\r\n    this.setState({\r\n      characters: characters.filter((character, i) => {\r\n        return i !== index\r\n      })\r\n    })\r\n  }\r\n\r\n  handleSubmit = (character) => {\r\n    this.setState({\r\n      characters: [...this.state.characters, character]\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { characters } = this.state\r\n\r\n    return(\r\n      <div className=\"container\">\r\n        <Form handleSubmit={this.handleSubmit}/>\r\n        <Table characterData={characters} removerCharacter={this.removerCharacter}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}